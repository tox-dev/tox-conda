[tox]
envlist =
    fix
    coverage
    py3{12, 11, 10, 9}
    pkg_meta
skip_missing_interpreters = true
minversion = 4

[testenv]
description = run test suite under {basepython}
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
    PIP_DISABLE_VERSION_CHECK = 1
    PYTHONDONTWRITEBYTECODE = 1
    VIRTUALENV_DOWNLOAD = 0
deps =
    devpi_process
    pytest
    pytest-cov
    pytest-mock
    pytest-order
    pytest-timeout
commands =
    pytest {posargs: \
      --junitxml {toxworkdir}/junit.{envname}.xml --cov {envsitepackagesdir}/tox_conda --cov tests \
      --cov-config=tox.ini --no-cov-on-fail --cov-report term-missing --cov-context=test \
      --cov-report html:{envtmpdir}/htmlcov \
      --cov-report xml:{toxworkdir}/coverage.{envname}.xml \
      tests --timeout 180 --durations 5}

[testenv:fix]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
passenv =
    HOMEPATH
    PROGRAMDATA
skip_install = true
deps =
    pre-commit>=2
    virtualenv<20.0.34
extras =
    lint
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
    generates a diff coverage against origin/main (can be changed by setting DIFF_AGAINST env var)
passenv =
    DIFF_AGAINST
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage
skip_install = true
deps =
    {[testenv]deps}
    coverage>=5
    diff_cover
parallel_show_output = true
commands =
    coverage combine
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    diff-cover --compare-branch {env:DIFF_AGAINST:origin/main} {toxworkdir}/coverage.xml
depends =
    py3{12, 11, 10, 9}

[testenv:pkg_meta]
description = check that the long description is valid
basepython = python3.10
skip_install = true
deps =
    build>=0.0.4
    twine>=3
commands =
    python -m build -o {envtmpdir} -s -w .
    twine check {envtmpdir}/*

[testenv:dev]
description = dev environment with all deps at {envdir}
usedevelop = true
commands =
    python -m pip list --format=columns
    python -c "print(r'{envpython}')"

[flake8]
max-line-length = 99
ignore = E203

[coverage:run]
branch = true
parallel = true

[coverage:report]
skip_covered = True
show_missing = True
exclude_lines =
    \#\s*pragma: no cover
    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
    ^\s*raise$
    ^if __name__ == ['"]__main__['"]:$

[coverage:paths]
source = src/tox_conda
    .tox*/*/lib/python*/site-packages/tox_conda
    .tox*/pypy*/site-packages/tox_conda
    .tox*\*\Lib\site-packages\tox_conda
    */src/tox_conda
    *\src\tox_conda
