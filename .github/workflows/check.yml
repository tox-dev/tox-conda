name: check
on:
  push:
  pull_request:
  schedule:
    - cron: "0 8 * * *"

concurrency:
  group: check-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre_commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: pre-commit/action@v3.0.1

  test:
    name: test ${{ matrix.py }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu", "windows", "macos"]
        py: ["3.12", "3.11", "3.10", "3.9"]
    steps:
      - uses: actions/checkout@v4
      - name: setup miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.py }}
          miniforge-version: latest
      - name: install tox
        run: |
          mamba install tox
      - name: run test suite
        run: |
          PYVERSION=${{ matrix.py }}
          tox run -e py${PYVERSION//./}

  check:
    name: check ${{ matrix.tox_env }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu", "windows"]
        tox_env: ["dev", "pkg_meta"]
        exclude:
          - { os: windows, tox_env: pkg_meta }
    steps:
      - uses: actions/checkout@v4
      - name: setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.10"
          miniforge-version: latest
      - name: install tox
        run: |
          mamba install tox
      - name: run check for ${{ matrix.tox_env }}
        run: tox run -e ${{ matrix.tox_env }}
        env:
          UPGRADE_ADVISORY: "yes"
